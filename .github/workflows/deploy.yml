# 🚀 Deploy AutoCuidado Club to Firebase Hosting & GitHub Pages
name: Deploy AutoCuidado Club
     
on:
  push:
    branches:
      - main

jobs:
  deploy_firebase:
    runs-on: ubuntu-22.04  # Change from ubuntu-latest


    steps:
      # ✅ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # ✅ Debug: Ensure GitHub Secrets are present
      - name: Debug GitHub Secrets Presence
        run: |
          echo "🔍 Checking secrets..."
          echo "✅ FIREBASE_API_KEY is set: [${{ secrets.FIREBASE_API_KEY != '' }}]"
          echo "✅ FIREBASE_SERVICE_ACCOUNT is set: [${{ secrets.FIREBASE_SERVICE_ACCOUNT != '' }}]"

      # ✅ Generate env.js from GitHub Secrets
      - name: Generate env.js from GitHub Secrets
        run: |
          echo "🔍 Generating env.js from GitHub Secrets..."
          cat <<EOF > public/env.js
          window._env_ = {
            FIREBASE_API_KEY: "${{ secrets.FIREBASE_API_KEY }}",
            FIREBASE_AUTH_DOMAIN: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            FIREBASE_PROJECT_ID: "${{ secrets.FIREBASE_PROJECT_ID }}",
            FIREBASE_STORAGE_BUCKET: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            FIREBASE_MESSAGING_SENDER_ID: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            FIREBASE_APP_ID: "${{ secrets.FIREBASE_APP_ID }}",
            FIREBASE_MEASUREMENT_ID: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
          };
          EOF
          echo "✅ env.js successfully generated."

      # ✅ Verify env.js content
      - name: Verify env.js content
        run: |
          echo "🔍 Checking env.js content..."
          cat public/env.js
          echo "✅ env.js verified."

      - name: Verify env.js exists
        run: |
          echo "🔍 Checking if env.js exists..."
          ls -l public/env.js || echo "❌ env.js NOT FOUND!"
          cat public/env.js || echo "❌ env.js is EMPTY!"

      # ✅ Decode and Set Up Firebase Service Account Credentials
      - name: Decode Firebase Service Account JSON
        run: |
          echo "🔍 Decoding Firebase Service Account JSON..."
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 --decode > $HOME/service-account.json
          if [ ! -s "$HOME/service-account.json" ]; then
            echo "❌ Error: service-account.json is empty or missing!"
            exit 1
          fi
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/service-account.json
          echo "✅ Firebase Service Account decoded and loaded."

      # ✅ Authenticate with Google Cloud using Service Account
      - name: Authenticate with Google Cloud
        run: |
          echo "🔍 Authenticating with Google Cloud..."
          gcloud auth activate-service-account --key-file=$HOME/service-account.json
          gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}
          gcloud auth list
          echo "✅ Google Cloud authentication successful."

      # ✅ Install Firebase CLI
      - name: Install Firebase CLI
        run: |
          echo "🔍 Installing Firebase CLI..."
          curl -sL https://firebase.tools | bash
          firebase --version
          echo "✅ Firebase CLI installed."

      # ✅ Verify Firebase Authentication
      - name: Verify Firebase Authentication
        run: |
          echo "🔍 Checking Firebase authentication..."
          firebase logout --force || echo "✅ Firebase logout ignored."
          firebase login:ci || echo "✅ Firebase CI login ignored."
          firebase list || echo "✅ Firebase projects listed."
          echo "✅ Firebase authentication verified."

      # ✅ Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        run: |
          echo "🚀 Deploying to Firebase Hosting..."
          GOOGLE_APPLICATION_CREDENTIALS="$HOME/service-account.json" firebase deploy --only hosting --project=${{ secrets.FIREBASE_PROJECT_ID }}
          echo "✅ Firebase Hosting deployed successfully."

  # ✅ Deploy to GitHub Pages
  deploy_github_pages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up GitHub Pages
        run: |
          mkdir -p public
          cp index.html public/index.html

      - name: Deploy GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: public
