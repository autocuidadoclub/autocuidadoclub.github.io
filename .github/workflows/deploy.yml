# üöÄ Deploy AutoCuidado Club to Firebase Hosting & GitHub Pages
name: Deploy AutoCuidado Club

on:
  push:
    branches:
      - main

jobs:
  deploy_firebase:
    runs-on: ubuntu-latest

    steps:
      # ‚úÖ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # ‚úÖ Generate env.js from GitHub Secrets
      - name: Generate env.js
        run: >
          echo "üîç Generating env.js..." &&
          echo "window._env_ = {" > public/env.js &&
          echo "  FIREBASE_API_KEY: '${{ secrets.FIREBASE_API_KEY }}'," >> public/env.js &&
          echo "  FIREBASE_AUTH_DOMAIN: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'," >> public/env.js &&
          echo "  FIREBASE_PROJECT_ID: '${{ secrets.FIREBASE_PROJECT_ID }}'," >> public/env.js &&
          echo "  FIREBASE_STORAGE_BUCKET: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'," >> public/env.js &&
          echo "  FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'," >> public/env.js &&
          echo "  FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'," >> public/env.js &&
          echo "  FIREBASE_MEASUREMENT_ID: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'," >> public/env.js &&
          echo "  ZOHO_CLIENT_ID: '${{ secrets.ZOHO_CLIENT_ID }}'," >> public/env.js &&
          echo "  ZOHO_CLIENT_SECRET: '${{ secrets.ZOHO_CLIENT_SECRET }}'," >> public/env.js &&
          echo "  ZOHO_REFRESH_TOKEN: '${{ secrets.ZOHO_REFRESH_TOKEN }}'" >> public/env.js &&
          echo "};" >> public/env.js &&
          echo "‚úÖ env.js generated successfully."

      # ‚úÖ Verify env.js exists
      - name: Verify env.js exists
        run: cat public/env.js || echo "‚ùå env.js is missing!"

      # ‚úÖ Decode Firebase Service Account JSON
      - name: Decode Firebase Service Account JSON
        run: |
          echo "üîç Decoding Firebase Service Account JSON..."
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" | base64 --decode > $HOME/service-account.json
          if [ ! -s "$HOME/service-account.json" ]; then
            echo "‚ùå Error: service-account.json is empty or missing!"
            exit 1
          fi
          echo "‚úÖ Firebase Service Account decoded."

      # ‚úÖ Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        run: |
          echo "üîç Authenticating with Google Cloud..."
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/service-account.json
          gcloud auth activate-service-account --key-file=$HOME/service-account.json
          gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}
          gcloud auth list
          echo "‚úÖ Google Cloud authentication successful."

      # ‚úÖ Install Firebase CLI
      - name: Install Firebase CLI via npm
        run: |
          echo "üîç Installing Firebase CLI..."
          npm install -g firebase-tools
          firebase --version
          echo "‚úÖ Firebase CLI installed."

      # ‚úÖ Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        run: |
          echo "üöÄ Deploying to Firebase Hosting..."
          GOOGLE_APPLICATION_CREDENTIALS="$HOME/service-account.json" firebase deploy --only hosting --project=${{ secrets.FIREBASE_PROJECT_ID }}
          echo "‚úÖ Firebase Hosting deployed."

      # ‚úÖ Deploy Firebase Functions (e.g. webhook)
      - name: Deploy Firebase Functions
        run: |
          echo "üöÄ Deploying Firebase Functions..."
          cd functions
          npm install
          GOOGLE_APPLICATION_CREDENTIALS="$HOME/service-account.json" firebase deploy --only functions --project=${{ secrets.FIREBASE_PROJECT_ID }}
          echo "‚úÖ Firebase Functions deployed."

  deploy_github_pages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Prepare public folder
        run: |
          mkdir -p public
          cp index.html public/index.html

      - name: Deploy GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: public
