 # ðŸš€ Deploy AutoCuidado Club to Firebase Hosting & GitHub Pages
name: Deploy AutoCuidado Club

on:
  push:
    branches:
      - main

jobs:
  deploy_firebase:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Inject API Keys into env.js
        run: |
          mkdir -p public  # Ensure public directory exists
          echo "window._env_ = {" > public/env.js
          echo "  FIREBASE_API_KEY: '${{ secrets.FIREBASE_API_KEY }}'," >> public/env.js
          echo "  FIREBASE_AUTH_DOMAIN: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'," >> public/env.js
          echo "  FIREBASE_DATABASE_URL: '${{ secrets.FIREBASE_DATABASE_URL }}'," >> public/env.js
          echo "  FIREBASE_PROJECT_ID: '${{ secrets.FIREBASE_PROJECT_ID }}'," >> public/env.js
          echo "  FIREBASE_STORAGE_BUCKET: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'," >> public/env.js
          echo "  FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'," >> public/env.js
          echo "  FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'," >> public/env.js
          echo "  FIREBASE_MEASUREMENT_ID: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'," >> public/env.js
          echo "  GOOGLE_CLOUD_API_KEY: '${{ secrets.GOOGLE_CLOUD_API_KEY }}'," >> public/env.js
          echo "  GOOGLE_CALENDAR_ID: '${{ secrets.GOOGLE_CALENDAR_ID }}'," >> public/env.js
          echo "  GOOGLE_CLIENT_ID: '${{ secrets.GOOGLE_CLIENT_ID }}'," >> public/env.js
          echo "  GOOGLE_PROJECT_NUMBER: '${{ secrets.GOOGLE_PROJECT_NUMBER }}'" >> public/env.js
          echo "};" >> public/env.js

      - name: Ensure Public Directory Exists
        run: |
          mkdir -p public  
          touch public/index.html  
          echo "<h1>AutoCuidado Club is Live</h1>" > public/index.html  

      # âœ… Authenticate Google Cloud
      - name: Inject Google Cloud Credentials
        run: echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > $HOME/service-account.json

      - name: Install jq
        run: sudo apt-get install -y jq  # âœ… Fix missing jq

      - name: Validate Google Cloud Service Account Key
        run: cat $HOME/service-account.json | jq .

      - name: Authenticate Google Cloud SDK
        run: gcloud auth activate-service-account --key-file=$HOME/service-account.json

      - name: Set Google Cloud Project
        run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Enable Required Google Cloud APIs
        run: |
          gcloud services enable firebase.googleapis.com \
                                  firebasestorage.googleapis.com \
                                  firebasehosting.googleapis.com \
                                  cloudfunctions.googleapis.com \
                                  cloudbuild.googleapis.com \
                                  iam.googleapis.com \
                                  cloudresourcemanager.googleapis.com \
                                  serviceusage.googleapis.com \
                                  run.googleapis.com

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/service-account.json
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/service-account.json
          firebase deploy --only hosting --project=${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy Google Cloud Functions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $HOME/service-account.json
        run: |
          gcloud functions deploy processSubscription \
            --source=functions \
            --runtime nodejs20 \
            --trigger-http \
            --allow-unauthenticated \
            --region=us-central1 \
            --gen2 \
            --project=${{ secrets.FIREBASE_PROJECT_ID }}

  deploy_github_pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Move Files from Public to Root
        run: |
          shopt -s dotglob
          mv public/* .
          rm -rf public

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions[bot]"

      - name: Check for Changes and Push
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions[bot]"
          git add .

          # Check if there are any changes before committing
          if git diff --cached --quiet; then
            echo "âœ… No changes detected, skipping commit."
            exit 0
          fi

          git commit -m "Move web files to public directory automatically" || echo "âœ… No changes to commit."
          git push origin main || echo "âœ… No changes to push, skipping."

