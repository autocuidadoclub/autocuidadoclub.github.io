# 🚀 Deploy AutoCuidado Club (Firebase Hosting, GitHub Pages, Functions)
name: Deploy AutoCuidado Club

on:
  push:
    branches:
      - main

jobs:
  deploy_firebase:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate env.js
        run: >
          echo "🔍 Generating env.js..." &&
          echo "window._env_ = {" > public/env.js &&
          echo "  FIREBASE_API_KEY: '${{ secrets.FIREBASE_API_KEY }}'," >> public/env.js &&
          echo "  FIREBASE_AUTH_DOMAIN: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'," >> public/env.js &&
          echo "  FIREBASE_PROJECT_ID: '${{ secrets.FIREBASE_PROJECT_ID }}'," >> public/env.js &&
          echo "  FIREBASE_STORAGE_BUCKET: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'," >> public/env.js &&
          echo "  FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'," >> public/env.js &&
          echo "  FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'," >> public/env.js &&
          echo "  FIREBASE_MEASUREMENT_ID: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'," >> public/env.js &&
          echo "  ZOHO_CLIENT_ID: '${{ secrets.ZOHO_CLIENT_ID }}'," >> public/env.js &&
          echo "  ZOHO_CLIENT_SECRET: '${{ secrets.ZOHO_CLIENT_SECRET }}'," >> public/env.js &&
          echo "  ZOHO_REFRESH_TOKEN: '${{ secrets.ZOHO_REFRESH_TOKEN }}'" >> public/env.js &&
          echo "};" >> public/env.js &&
          echo "✅ env.js generated successfully."

      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools

      - name: Deploy to Firebase Hosting
        run: |
          firebase deploy --only hosting --project=${{ secrets.FIREBASE_PROJECT_ID }} --token="${{ secrets.FIREBASE_DEPLOY_TOKEN }}"

      - name: Deploy Firebase Functions
        run: |
          cd functions
          npm install
          firebase deploy --only functions --project=${{ secrets.FIREBASE_PROJECT_ID }} --token="${{ secrets.FIREBASE_DEPLOY_TOKEN }}"

  deploy_github_pages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Prepare public folder
        run: |
          mkdir -p public
          cp index.html public/index.html

      - name: Deploy GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: public
